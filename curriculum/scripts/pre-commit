#!/bin/sh
# Get absolute path to curriculum directory and change to it
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
CURRICULUM_DIR="$(cd "$SCRIPT_DIR/.." && pwd)"
cd "$CURRICULUM_DIR" || exit 1

echo "Running pre-commit checks..."

# Run TypeScript type checking
echo "üî∑ Running TypeScript type check..."
pnpm exec tsc --noEmit
if [ $? -ne 0 ]; then
    echo "‚ùå TypeScript type check failed. Commit aborted."
    exit 1
fi

# Run formatter on changed files only
echo "üíÖ Formatting changed files..."
STAGED_FILES_RELATIVE=$(git diff --cached --name-only --diff-filter=ACMR | grep "^curriculum/" | grep -E '\.(ts|tsx|js|jsx|mjs|css|json|md|yml|yaml)$' | sed 's|^curriculum/||' || true)
if [ -n "$STAGED_FILES_RELATIVE" ]; then
    echo "Formatting: $STAGED_FILES_RELATIVE"
    # Convert relative paths to absolute paths for prettier
    STAGED_FILES_ABSOLUTE=$(echo "$STAGED_FILES_RELATIVE" | sed "s|^|$CURRICULUM_DIR/|")
    pnpm exec prettier --write $STAGED_FILES_ABSOLUTE
    # Git add needs paths relative to repo root (curriculum/...)
    STAGED_FILES_FOR_GIT=$(echo "$STAGED_FILES_RELATIVE" | sed 's|^|curriculum/|')
    git add $STAGED_FILES_FOR_GIT
else
    echo "No files to format"
fi

# Run lint check (treating warnings as errors)
echo "üîç Running lint check..."
pnpm run lint --max-warnings=0
if [ $? -ne 0 ]; then
    echo "‚ùå Lint check failed (errors or warnings found). Commit aborted."
    exit 1
fi

# Run tests
echo "üß™ Running tests..."
pnpm test
if [ $? -ne 0 ]; then
    echo "‚ùå Tests failed. Commit aborted."
    exit 1
fi

echo "‚úÖ All checks passed!"
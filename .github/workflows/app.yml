name: App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  check-lockfiles:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for individual package lockfiles
        run: |
          if ls app/pnpm-lock.yaml curriculum/pnpm-lock.yaml interpreters/pnpm-lock.yaml 2>/dev/null; then
            echo "❌ Error: Individual package lockfiles detected"
            echo "Only the root pnpm-lock.yaml should exist in a monorepo"
            echo "Run 'rm app/pnpm-lock.yaml curriculum/pnpm-lock.yaml interpreters/pnpm-lock.yaml' to fix"
            exit 1
          fi
          echo "✅ No individual package lockfiles found"

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run typecheck
        working-directory: app
        run: npx tsc --noEmit

  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check formatting
        working-directory: app
        run: pnpm run format:check

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linter
        working-directory: app
        run: pnpm run lint

  tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run unit tests
        working-directory: app
        run: pnpm run test --coverage --ci

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./app/coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  e2e-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        working-directory: app
        run: pnpm run build

      - name: Install Puppeteer browser and dependencies
        working-directory: app
        run: |
          # Install Chrome browser for Puppeteer
          npx puppeteer browsers install chrome

          # Install required system dependencies (Ubuntu 24.04 compatible)
          sudo apt-get update
          sudo apt-get install -y \
            libnss3 \
            libatk-bridge2.0-0 \
            libdrm2 \
            libxcomposite1 \
            libxdamage1 \
            libxrandr2 \
            libgbm1 \
            libxkbcommon0 \
            libxss1 \
            libgtk-3-0t64 \
            libgbm-dev \
            libatspi2.0-0 \
            libcups2 \
            libasound2t64

      - name: Run E2E tests
        working-directory: app
        run: pnpm test:e2e
        env:
          HEADLESS: true
          CI: true

      - name: Upload test artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-screenshots
          path: |
            app/screenshots/
            app/test-results/
          retention-days: 7
